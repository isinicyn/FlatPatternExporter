<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="FlatPatternExporter.UI.Windows.FlatPatternExporterMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:local="clr-namespace:FlatPatternExporter.UI.Controls"
        xmlns:enums="clr-namespace:FlatPatternExporter.Enums"
        xmlns:models="clr-namespace:FlatPatternExporter.Models"
        xmlns:services="clr-namespace:FlatPatternExporter.Services"
        xmlns:converters="clr-namespace:FlatPatternExporter.Converters"
        xmlns:extensions="clr-namespace:FlatPatternExporter.Extensions"
        shell:WindowChrome.WindowChrome="{StaticResource CustomWindowChrome}"
        PreviewMouseLeftButtonDown="MainWindow_PreviewMouseLeftButtonDown"
        Title="FPEx"
        MinHeight="600" MinWidth="1745"
        WindowStartupLocation="CenterScreen" SnapsToDevicePixels="True"
        Background="{DynamicResource BackgroundPrimaryBrush}"
        Foreground="{DynamicResource TextSecondaryBrush}">

    <Border Style="{StaticResource WindowRootBorderStyle}">
        <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Row 0: Custom title bar -->
        <local:CustomTitleBar x:Name="TitleBar"
                              Grid.Row="0"
                              Title="Flat Pattern Exporter 2026"
                              Icon="/FPExport.ico"
                              TitleAlignment="Center">
            <local:CustomTitleBar.ContentArea>
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource TitleBarIconButtonStyle}"
                            Tag="{StaticResource InfoIconGeometry}"
                            Click="AboutButton_Click"/>
                    <ToggleButton Style="{StaticResource ThemeToggleButtonStyle}"
                                  Checked="ThemeToggleButton_Changed"
                                  Unchecked="ThemeToggleButton_Changed"/>
                </StackPanel>
            </local:CustomTitleBar.ContentArea>
        </local:CustomTitleBar>

        <!-- Row 1: Top panel -->
        <Grid Grid.Row="1" Margin="{StaticResource OuterTopMarginThickness}">
            <!-- Controls aligned to the left -->
            <WrapPanel Orientation="Horizontal" VerticalAlignment="Top">
                <Button x:Name="ScanButton" Content="{extensions:Localize Button_Scan}" Click="ScanButton_Click" Margin="{StaticResource RightStandardMarginThickness}" Style="{StaticResource LargeSquareProgressButtonStyle}" Tag="{Binding ScanProgressValue, RelativeSource={RelativeSource AncestorType=Window}}" ToolTip="{extensions:Localize ToolTip_ScanButton}" RenderTransformOrigin="0,0"/>
                <Button x:Name="ClearButton" Content="{extensions:Localize Button_Clear}" Click="ClearList_Click" IsEnabled="True" Margin="{StaticResource RightStandardMarginThickness}" Style="{StaticResource LargeSquareButtonStyle}" ToolTip="{extensions:Localize ToolTip_ClearButton}"/>
                <Button x:Name="ExportButton" Content="{extensions:Localize Button_Export}" Click="ExportButton_Click" IsEnabled="False" Style="{StaticResource LargeSquareProgressButtonStyle}" Tag="{Binding ExportProgressValue, RelativeSource={RelativeSource AncestorType=Window}}" ToolTipService.ShowOnDisabled="True" ToolTip="{extensions:Localize ToolTip_ExportButton}" Margin="{StaticResource RightStandardMarginThickness}"/>


                <Border Margin="{StaticResource RightStandardMarginThickness}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="350"
                        BorderBrush="{DynamicResource BorderSecondaryBrush}" BorderThickness="{StaticResource StandardBorderThicknessValue}" CornerRadius="{StaticResource StandardCornerRadiusValue}" Background="{DynamicResource BackgroundTertiaryBrush}" Padding="{StaticResource SmallPaddingThickness}" Height="75">
                    <Grid VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{extensions:Localize Label_DocumentType}" Style="{StaticResource DocumentInfoLabelStyle}" FontWeight="Normal"/>
                        <TextBlock x:Name="DocumentTypeLabel" Grid.Column="1" Text="" Style="{StaticResource DocumentInfoValueStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{extensions:Localize Label_Designation}" Style="{StaticResource DocumentInfoLabelStyle}" FontWeight="Normal"/>
                        <TextBlock x:Name="PartNumberLabel" Grid.Row="1" Grid.Column="1" Text="" Style="{StaticResource DocumentInfoValueStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{extensions:Localize Label_Description}" Style="{StaticResource DocumentInfoLabelStyle}" FontWeight="Normal"/>
                        <TextBlock x:Name="DescriptionLabel" Grid.Row="2" Grid.Column="1" Text="" Style="{StaticResource DocumentInfoValueStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{extensions:Localize Label_ModelState}" Style="{StaticResource DocumentInfoLabelStyle}" FontWeight="Normal"/>
                        <TextBlock x:Name="ModelStateLabel" Grid.Row="3" Grid.Column="1" Text="" Style="{StaticResource ModelStateValueStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                    </Grid>
                </Border>
            </WrapPanel>
        </Grid>

        <!-- Row 2: Settings -->
        <Expander x:Name="SettingsExpander" Grid.Row="2" Margin="{StaticResource StandardPaddingThickness}" Padding="{StaticResource UniformSmallPaddingThickness}" Header="{extensions:Localize Header_Settings}" IsExpanded="False" FlowDirection="RightToLeft"
                  Style="{StaticResource SquareExpanderStyle}">
            <TabControl FlowDirection="LeftToRight">
                <TabItem Header="{extensions:Localize Header_Main}">
            <WrapPanel Orientation="Horizontal" Margin="{StaticResource UniformStandardMarginThickness}">
                        <GroupBox Header="{extensions:Localize Header_ComponentProcessing}" Margin="{StaticResource RightStandardMarginThickness}">
                            <Grid Margin="{StaticResource SectionContentMarginThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Scanning method -->
                                <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <RadioButton x:Name="TraverseRadioButton" Content="{extensions:Localize UI_ProcessByStructure}" IsChecked="{Binding SelectedProcessingMethod, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=Traverse, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <RadioButton x:Name="BomRadioButton" Content="{extensions:Localize UI_ProcessByBOM}" IsChecked="{Binding SelectedProcessingMethod, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=BOM, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </StackPanel>

                                <!-- Vertical separator -->
                                <Separator Grid.Column="1" Style="{StaticResource VerticalSeparatorStyle}" Margin="{StaticResource VerticalSeparatorOuterMarginThickness}" UseLayoutRounding="True"/>

                                <!-- Component filtering -->
                                <StackPanel Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <CheckBox x:Name="ExcludeReferencePartsCheckBox" Content="{extensions:Localize UI_ExcludeReference}" IsChecked="{Binding ExcludeReferenceParts, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="ExcludePurchasedPartsCheckBox" Content="{extensions:Localize UI_ExcludePurchased}" IsChecked="{Binding ExcludePurchasedParts, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="ExcludePhantomPartsCheckBox" Content="{extensions:Localize UI_ExcludePhantom}" IsChecked="{Binding ExcludePhantomParts, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="IncludeLibraryComponentsCheckBox" Content="{extensions:Localize UI_IncludeLibrary}" IsChecked="{Binding IncludeLibraryComponents, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="{extensions:Localize Header_DxfExportSettings}" Margin="{StaticResource RightStandardMarginThickness}">
                            <Grid Margin="{StaticResource SectionContentMarginThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- DXF export settings -->
                                <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <StackPanel Orientation="Horizontal" Margin="{StaticResource BottomSmallMarginThickness}">
                                        <Label Content="{extensions:Localize Label_AutoCADVersion}" VerticalAlignment="Center"/>
                                        <ComboBox x:Name="AcadVersionComboBox"
                                                  Width="70"
                                                  Style="{StaticResource BaseComboBoxStyle}"
                                                  ItemsSource="{Binding AcadVersions}"
                                                  DisplayMemberPath="DisplayName"
                                                  SelectedValuePath="Value"
                                                  SelectedValue="{Binding SelectedAcadVersion, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <CheckBox x:Name="MergeProfilesIntoPolylineCheckBox" Content="{extensions:Localize UI_MergeProfiles}" IsChecked="{Binding MergeProfilesIntoPolyline, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="RebaseGeometryCheckBox" Content="{extensions:Localize UI_RebaseGeometry}" IsChecked="{Binding RebaseGeometry, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="TrimCenterlinesCheckBox" Content="{extensions:Localize UI_TrimCenterlines}" IsChecked="{Binding TrimCenterlines, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <Separator Style="{StaticResource HorizontalSeparatorStyle}" SnapsToDevicePixels="True" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="OptimizeDxfCheckBox" Content="{extensions:Localize UI_OptimizeDxf}" IsChecked="{Binding OptimizeDxf, Mode=TwoWay}" IsEnabled="{Binding IsOptimizeDxfEnabled}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </StackPanel>

                                <!-- Vertical separator -->
                                <Separator Grid.Column="1" Style="{StaticResource VerticalSeparatorStyle}" Margin="{StaticResource VerticalSeparatorOuterMarginThickness}" UseLayoutRounding="True"/>

                                <!-- Spline replacement -->
                                <Grid Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox x:Name="EnableSplineReplacementCheckBox"
                                              Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                              Content="{extensions:Localize UI_SplineReplacement}"
                                              IsChecked="{Binding EnableSplineReplacement, Mode=TwoWay}"
                                              Margin="{StaticResource BottomSmallMarginThickness}"/>

                                    <Label Grid.Row="1" Grid.Column="0"
                                           Content="{extensions:Localize Label_ReplacementType}"
                                           VerticalAlignment="Center"
                                           Padding="{StaticResource LabelInlinePaddingThickness}"
                                           Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <ComboBox x:Name="SplineReplacementComboBox"
                                              Grid.Row="1" Grid.Column="1"
                                              Width="65"
                                              HorizontalAlignment="Left"
                                              IsEnabled="{Binding IsChecked, ElementName=EnableSplineReplacementCheckBox}"
                                              Style="{StaticResource BaseComboBoxStyle}"
                                              Margin="{StaticResource BottomSmallMarginThickness}"
                                              SelectedValue="{Binding SelectedSplineReplacement, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding>
                                                            <MultiBinding.Converter>
                                                                <converters:EnumToDisplayNameConverter/>
                                                            </MultiBinding.Converter>
                                                            <Binding/>
                                                            <Binding Path="CurrentCulture" Source="{x:Static services:LocalizationManager.Instance}"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <enums:SplineReplacementType>Lines</enums:SplineReplacementType>
                                        <enums:SplineReplacementType>Arcs</enums:SplineReplacementType>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0"
                                           Content="{extensions:Localize Label_Tolerance}"
                                           VerticalAlignment="Center"
                                           Padding="{StaticResource LabelInlinePaddingThickness}"
                                           Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <TextBox x:Name="SplineToleranceTextBox"
                                             Grid.Row="2" Grid.Column="1"
                                             Width="65"
                                             HorizontalAlignment="Left"
                                             IsEnabled="{Binding IsChecked, ElementName=EnableSplineReplacementCheckBox}"
                                             Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </Grid>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="{extensions:Localize Header_ExportPlacement}" Margin="{StaticResource RightStandardMarginThickness}">
                            <Grid Margin="{StaticResource SectionContentMarginThickness}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- Left column -->
                                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top">
                                    <RadioButton x:Name="ChooseFolderRadioButton" Content="{extensions:Localize UI_ChooseFolder}" GroupName="ExportFolderOptions" IsChecked="{Binding SelectedExportFolder, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=ChooseFolder, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <RadioButton x:Name="ComponentFolderRadioButton" Content="{extensions:Localize UI_ComponentFolder}" GroupName="ExportFolderOptions" IsChecked="{Binding SelectedExportFolder, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=ComponentFolder, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <RadioButton x:Name="PartFolderRadioButton" Content="{extensions:Localize UI_PartFolder}" GroupName="ExportFolderOptions" IsChecked="{Binding SelectedExportFolder, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=PartFolder, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <RadioButton x:Name="ProjectFolderRadioButton" Content="{extensions:Localize UI_ProjectFolder}" GroupName="ExportFolderOptions" IsChecked="{Binding SelectedExportFolder, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=ProjectFolder, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <RadioButton x:Name="FixedFolderRadioButton" Content="{extensions:Localize UI_FixedFolder}" GroupName="ExportFolderOptions" IsChecked="{Binding SelectedExportFolder, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=FixedFolder, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </StackPanel>

                                <!-- Vertical separator -->
                                <Separator Grid.Row="0" Grid.Column="1" Style="{StaticResource VerticalSeparatorStyle}" Margin="{StaticResource VerticalSeparatorCenteredMarginThickness}" UseLayoutRounding="True"/>

                                <!-- Right column -->
                                <StackPanel Grid.Row="0" Grid.Column="2" VerticalAlignment="Top">
                                    <CheckBox x:Name="EnableSubfolderCheckBox" Content="{extensions:Localize UI_CreateSubfolder}" IsChecked="{Binding EnableSubfolder, Mode=TwoWay}" IsEnabled="{Binding IsSubfolderCheckBoxEnabled}" ToolTip="{extensions:Localize ToolTip_SubfolderInvalid}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <TextBox x:Name="SubfolderNameTextBox" IsEnabled="{Binding EnableSubfolder}" TextChanged="SubfolderNameTextBox_TextChanged" HorizontalAlignment="Stretch" Margin="{StaticResource BottomSmallMarginThickness}" Style="{StaticResource BaseTextBoxStyle}"/>
                                    <CheckBox x:Name="OrganizeByMaterialCheckBox" Content="{extensions:Localize UI_OrganizeByMaterial}" IsChecked="{Binding OrganizeByMaterial, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                    <CheckBox x:Name="OrganizeByThicknessCheckBox" Content="{extensions:Localize UI_OrganizeByThickness}" IsChecked="{Binding OrganizeByThickness, Mode=TwoWay}" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                </StackPanel>

                                <!-- Fixed folder controls - separate row -->
                                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="{StaticResource BottomSmallMarginThickness}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="SelectFixedFolderButton" Grid.Column="0" Content="..." Width="{StaticResource SmallButtonWidth}" Click="SelectFixedFolderButton_Click" Style="{StaticResource InteractiveActionButtonStyle}" Margin="{StaticResource LeftTinyRightStandardMarginThickness}" />
                    <Border Grid.Column="1" Background="{DynamicResource BackgroundSecondaryBrush}"
                        BorderBrush="{DynamicResource BorderPrimaryBrush}"
                        BorderThickness="{StaticResource StandardBorderThicknessValue}"
                        CornerRadius="{StaticResource StandardCornerRadiusValue}"
                        Height="{StaticResource StandardElementHeight}"
                        Padding="{StaticResource HorizontalSmallPaddingThickness}">
                                        <TextBlock x:Name="FixedFolderPathTextBlock"
                                               Text="{extensions:Localize UI_PathNotSelected}"
                                               TextTrimming="CharacterEllipsis"
                                               Opacity="0.75"
                                               VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="{extensions:Localize Header_ExcelExportSettings}" Margin="{StaticResource RightStandardMarginThickness}">
                            <Grid Margin="{StaticResource SectionContentMarginThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Default export format -->
                                <Label Grid.Row="0" Grid.Column="0" Content="{extensions:Localize Label_DefaultExportFormat}" VerticalAlignment="Center" Margin="{StaticResource RightSmallMarginThickness}"/>
                                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                                    <RadioButton x:Name="ExcelFormatRadioButton" Content="{extensions:Localize UI_ExportFormatExcel}"
                                                 IsChecked="{Binding DefaultExportFormat, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=Excel, Mode=TwoWay}"
                                                 Margin="{StaticResource RightStandardMarginThickness}"/>
                                    <RadioButton x:Name="CsvFormatRadioButton" Content="{extensions:Localize UI_ExportFormatCsv}"
                                                 IsChecked="{Binding DefaultExportFormat, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter=Csv, Mode=TwoWay}"/>
                                </StackPanel>

                                <!-- CSV delimiter -->
                                <Label Grid.Row="1" Grid.Column="0" Content="{extensions:Localize Label_CsvDelimiter}" VerticalAlignment="Center" Margin="0,5,5,0"/>
                                <ComboBox x:Name="CsvDelimiterComboBox" Grid.Row="1" Grid.Column="1"
                                          Width="150" HorizontalAlignment="Left"
                                          Style="{StaticResource BaseComboBoxStyle}"
                                          Margin="{StaticResource TopSmallMarginThickness}"
                                          SelectedValue="{Binding CsvDelimiter, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock.Text>
                                                    <MultiBinding>
                                                        <MultiBinding.Converter>
                                                            <converters:EnumToDisplayNameConverter/>
                                                        </MultiBinding.Converter>
                                                        <Binding/>
                                                        <Binding Path="CurrentCulture" Source="{x:Static services:LocalizationManager.Instance}"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <enums:CsvDelimiterType>Comma</enums:CsvDelimiterType>
                                    <enums:CsvDelimiterType>Semicolon</enums:CsvDelimiterType>
                                    <enums:CsvDelimiterType>Tab</enums:CsvDelimiterType>
                                    <enums:CsvDelimiterType>Pipe</enums:CsvDelimiterType>
                                </ComboBox>

                                <!-- Export file name -->
                                <Label Grid.Row="2" Grid.Column="0" Content="{extensions:Localize Label_ExportFileName}" VerticalAlignment="Center" Margin="0,5,5,0"/>
                                <ComboBox x:Name="ExportFileNameComboBox" Grid.Row="2" Grid.Column="1"
                                          Width="300" HorizontalAlignment="Left"
                                          Style="{StaticResource BaseComboBoxStyle}"
                                          Margin="{StaticResource TopSmallMarginThickness}"
                                          SelectedValue="{Binding ExcelExportFileNameType, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock.Text>
                                                    <MultiBinding>
                                                        <MultiBinding.Converter>
                                                            <converters:EnumToDisplayNameConverter/>
                                                        </MultiBinding.Converter>
                                                        <Binding/>
                                                        <Binding Path="CurrentCulture" Source="{x:Static services:LocalizationManager.Instance}"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <enums:ExcelExportFileNameType>DateTimeFormat</enums:ExcelExportFileNameType>
                                    <enums:ExcelExportFileNameType>FileName</enums:ExcelExportFileNameType>
                                    <enums:ExcelExportFileNameType>PartNumber</enums:ExcelExportFileNameType>
                                </ComboBox>
                            </Grid>
                        </GroupBox>

                    </WrapPanel>
                </TabItem>
                <TabItem Header="{extensions:Localize Header_LayerSettings}">
                    <GroupBox Header="{extensions:Localize Header_LayerSettingsDescription}" Margin="{StaticResource UniformStandardMarginThickness}">
                        <Grid Background="{DynamicResource BackgroundPrimaryBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Margin="{StaticResource VerticalSeparatorCenteredMarginThickness}" Grid.Column="0">
                                <local:LayerSettingControl x:Name="OuterProfileLayerControl" DataContext="{Binding LayerSettings[5]}" Pseudonym="OuterProfile"/>
                                <local:LayerSettingControl x:Name="InteriorProfilesLayerControl" DataContext="{Binding LayerSettings[6]}" Pseudonym="InteriorProfiles"/>
                                <local:LayerSettingControl x:Name="BendUpLayerControl" DataContext="{Binding LayerSettings[0]}" Pseudonym="BendUp"/>
                                <local:LayerSettingControl x:Name="BendDownLayerControl" DataContext="{Binding LayerSettings[1]}" Pseudonym="BendDown"/>
                                <local:LayerSettingControl x:Name="ToolCenterUpLayerControl" DataContext="{Binding LayerSettings[2]}" Pseudonym="ToolCenterUp"/>
                                <local:LayerSettingControl x:Name="ToolCenterDownLayerControl" DataContext="{Binding LayerSettings[3]}" Pseudonym="ToolCenterDown"/>
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="1" Margin="{StaticResource VerticalSeparatorCenteredMarginThickness}">
                                <local:LayerSettingControl x:Name="TangentLayerControl" DataContext="{Binding LayerSettings[12]}" Pseudonym="Tangent"/>
                                <local:LayerSettingControl x:Name="RollLinesLayerControl" DataContext="{Binding LayerSettings[14]}" Pseudonym="RollLines"/>
                                <local:LayerSettingControl x:Name="TangentRollLinesLayerControl" DataContext="{Binding LayerSettings[13]}" Pseudonym="TangentRollLines"/>
                                <local:LayerSettingControl x:Name="ArcCentersLayerControl" DataContext="{Binding LayerSettings[4]}" Pseudonym="ArcCenters"/>
                                <local:LayerSettingControl x:Name="FeatureProfilesUpLayerControl" DataContext="{Binding LayerSettings[7]}" Pseudonym="FeatureProfilesUp"/>
                                <local:LayerSettingControl x:Name="FeatureProfilesDownLayerControl" DataContext="{Binding LayerSettings[8]}" Pseudonym="FeatureProfilesDown"/>
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="2" Margin="{StaticResource VerticalSeparatorCenteredMarginThickness}">
                                <local:LayerSettingControl x:Name="UnconsumedSketchConstructionLayerControl" DataContext="{Binding LayerSettings[15]}" Pseudonym="UnconsumedSketchConstruction"/>
                                <local:LayerSettingControl x:Name="UnconsumedSketchesLayerControl" DataContext="{Binding LayerSettings[11]}" Pseudonym="UnconsumedSketches"/>
                                <local:LayerSettingControl x:Name="AltRepFrontLayerControl" DataContext="{Binding LayerSettings[9]}" Pseudonym="AltRepFront"/>
                                <local:LayerSettingControl x:Name="AltRepBackLayerControl" DataContext="{Binding LayerSettings[10]}" Pseudonym="AltRepBack"/>
                            </StackPanel>
                            <Separator Grid.Row="0" Grid.Column="0" Style="{StaticResource VerticalSeparatorStyle}" HorizontalAlignment="Right" Margin="{StaticResource VerticalSmallMarginThickness}"/>
                            <Separator Grid.Row="0" Grid.Column="1" Style="{StaticResource VerticalSeparatorStyle}" HorizontalAlignment="Right" Margin="{StaticResource VerticalSmallMarginThickness}"/>
                        </Grid>
                    </GroupBox>
                </TabItem>
                <TabItem Header="{extensions:Localize Header_FileName}">
                    <Grid Margin="{StaticResource UniformStandardMarginThickness}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Header with checkbox and hint -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="{StaticResource BottomLargeMarginThickness}">
                            <CheckBox x:Name="EnableFileNameConstructorCheckBox"
                                  Content="{extensions:Localize UI_EnableFileNameConstructor}"
                                  IsChecked="{Binding EnableFileNameConstructor, Mode=TwoWay}"
                                  Margin="{StaticResource RightMediumMarginThickness}" VerticalContentAlignment="Center" Padding="4,0,0,0"/>
                            <TextBlock Text="ℹ"
                                   FontSize="{StaticResource LargeFontSize}"
                                   Foreground="{DynamicResource TextDisabledBrush}"
                                   Cursor="Help"
                                   Margin="{StaticResource RightLargeMarginThickness}" VerticalAlignment="Center">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                <TextBlock Text="{extensions:Localize ToolTip_FileNameConstructorHelp}" FontWeight="Bold" Margin="{StaticResource BottomSmallMarginThickness}"/>
                                            <TextBlock Text="{extensions:Localize ToolTip_FileNameInstructionDoubleClick}"/>
                                            <TextBlock Text="{extensions:Localize ToolTip_FileNameInstructionDoubleClickRemove}"/>
                                            <TextBlock Text="{extensions:Localize ToolTip_FileNameInstructionExample}" FontStyle="Italic" Margin="{StaticResource TopSmallMarginThickness}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                        </TextBlock>

                        </StackPanel>

                        <Grid Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=EnableFileNameConstructorCheckBox}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300" MinWidth="300"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="1*" MinWidth="350"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="1*" MinWidth="400"/>
                            </Grid.ColumnDefinitions>

                            <!-- Left column: Preset manager -->
                            <GroupBox Grid.Column="0" Header="{extensions:Localize Header_TemplatePresetsManager}" Style="{StaticResource BaseGroupBoxStyle}"
                                      Margin="{StaticResource RightSmallMarginThickness}">
                                <StackPanel Margin="{StaticResource SectionContentMarginThickness}">
                                    <!-- Preset list and actions -->
                                    <TextBlock Text="{extensions:Localize Text_SavedPresets}" Style="{StaticResource SectionHeaderTextStyle}"/>

                                    <Grid Margin="{StaticResource BottomSmallMarginThickness}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ListBox x:Name="TemplatePresetsListBox"
                                                 Grid.Column="0"
                                                 ItemsSource="{Binding PresetManager.TemplatePresets}"
                                                 DisplayMemberPath="Name"
                                                 SelectedItem="{Binding PresetManager.SelectedTemplatePreset, Mode=TwoWay}"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                 Margin="{StaticResource BottomSmallMarginThickness}"
                                                 ToolTip="{extensions:Localize ToolTip_SelectPreset}" MaxHeight="140"/>

                                        <Border x:Name="EmptyStatePanel"
                                                Grid.Column="0"
                                                Background="{DynamicResource BackgroundSecondaryBrush}"
                                                BorderBrush="{DynamicResource BorderSecondaryBrush}"
                                                BorderThickness="{StaticResource StandardBorderThicknessValue}"
                                                CornerRadius="{StaticResource StandardCornerRadiusValue}"
                                                Padding="{StaticResource StandardPaddingThickness}"
                                                Margin="{StaticResource BottomSmallMarginThickness}"
                                                MaxHeight="140"
                                                Visibility="Collapsed">
                                            <TextBlock Text="{extensions:Localize Text_NoSavedPresets}"
                                                       Style="{StaticResource OverlayHintTextStyle}"
                                                       TextAlignment="Left"
                                                       TextWrapping="Wrap"
                                                       VerticalAlignment="Center"/>
                                        </Border>

                                        <StackPanel Grid.Column="1"
                                                    Orientation="Vertical"
                                                    Margin="{StaticResource LeftSmallMarginThickness}">

                                            <Button x:Name="CreatePresetButton"
                                                    Content="{extensions:Localize Button_Create}"
                                                    Click="CreatePresetButton_Click"
                                                    Style="{StaticResource InteractiveActionButtonStyle}"
                                                    IsEnabled="{Binding IsCreateButtonEnabled}"
                                                    ToolTip="{extensions:Localize ToolTip_CreatePreset}"
                                                    Margin="{StaticResource BottomSmallMarginThickness}"/>

                                            <Button x:Name="SaveChangesButton"
                                                    Content="{extensions:Localize Button_Save}"
                                                    Click="SaveChangesButton_Click"
                                                    Style="{StaticResource InteractiveActionButtonStyle}"
                                                    IsEnabled="{Binding IsSaveButtonEnabled}"
                                                    ToolTip="{extensions:Localize ToolTip_SavePreset}"
                                                    Margin="{StaticResource BottomSmallMarginThickness}"/>

                                            <Button x:Name="RenamePresetButton"
                                                    Content="{extensions:Localize Button_Rename}"
                                                    Click="RenamePresetButton_Click"
                                                    Style="{StaticResource InteractiveActionButtonStyle}"
                                                    IsEnabled="{Binding IsRenameButtonEnabled}"
                                                    ToolTip="{extensions:Localize ToolTip_RenamePreset}"
                                                    Margin="{StaticResource BottomSmallMarginThickness}"/>

                                            <Button x:Name="DuplicatePresetButton"
                                                    Content="{extensions:Localize Button_Duplicate}"
                                                    Click="DuplicatePresetButton_Click"
                                                    Style="{StaticResource InteractiveActionButtonStyle}"
                                                    IsEnabled="{Binding IsPresetSelected}"
                                                    ToolTip="{extensions:Localize ToolTip_DuplicatePreset}"
                                                    Margin="{StaticResource BottomSmallMarginThickness}"/>

                                            <Button x:Name="DeletePresetButton"
                                                    Content="{extensions:Localize Button_Delete}"
                                                    Click="DeletePresetButton_Click"
                                                    Style="{StaticResource WarningButtonStyle}"
                                                    IsEnabled="{Binding IsPresetSelected}"
                                                    ToolTip="{extensions:Localize ToolTip_DeletePreset}"
                                                    Margin="{StaticResource BottomSmallMarginThickness}"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- Preset name field -->
                                    <TextBlock Text="{extensions:Localize Text_PresetName}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <TextBox x:Name="PresetNameTextBox"
                                             Style="{StaticResource BaseTextBoxStyle}"
                                             ToolTip="{extensions:Localize ToolTip_PresetName}"
                                             Margin="{StaticResource BottomSmallMarginThickness}"
                                             TextChanged="PresetNameTextBox_TextChanged"/>
                                </StackPanel>
                            </GroupBox>

                            <GridSplitter Grid.Column="1" Width="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{DynamicResource StatusBarBackgroundBrush}" Margin="{StaticResource GridSplitterMarginThickness}"/>

                            <!-- Middle column: Data sources -->
                            <GroupBox Grid.Column="2" Header="{extensions:Localize Header_DataSources}" Margin="{StaticResource HorizontalSmallMarginThickness}">
                                <StackPanel Margin="{StaticResource SectionContentMarginThickness}">
                                <TextBlock Text="{extensions:Localize Text_StandardProperties}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <ListBox x:Name="AvailableTokensListBox"
                                         ItemsSource="{Binding AvailableTokens}"
                                         DisplayMemberPath="DisplayName"
                                         Style="{StaticResource TokenListBoxStyle}"
                                         MouseDoubleClick="TokenListBox_MouseDoubleClick" MinHeight="32" VerticalContentAlignment="Center" SnapsToDevicePixels="True"/>

                                <TextBlock Text="{extensions:Localize Text_UserProperties}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <ListBox x:Name="UserDefinedTokensListBox"
                                         ItemsSource="{Binding UserDefinedTokens}"
                                         DisplayMemberPath="DisplayName"
                                         Style="{StaticResource TokenListBoxStyle}"
                                         MouseDoubleClick="TokenListBox_MouseDoubleClick" MinHeight="32" VerticalContentAlignment="Center" SnapsToDevicePixels="True"/>

                                    <!-- Custom text and quick symbols in one row -->
                                    <TextBlock Text="{extensions:Localize Text_CustomTextAndSymbols}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Text input field and add button -->
                                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                                            <TextBox x:Name="CustomTextBox"
                                                 Width="125"
                                                 Style="{StaticResource BaseTextBoxStyle}"
                                                 KeyDown="CustomTextBox_KeyDown"
                                                 ToolTip="{extensions:Localize ToolTip_EnterCustomText}"/>
                                            <Button x:Name="AddCustomTextButton"
                                                Content="{extensions:Localize Button_Add}"
                                                Style="{StaticResource InteractiveActionButtonStyle}"
                                                Margin="{StaticResource LeftSmallMarginThickness}"
                                                Click="AddCustomTextButton_Click"
                                                ToolTip="{extensions:Localize ToolTip_AddCustomToken}"/>
                                        </StackPanel>

                                        <!-- Vertical separator -->
                                        <Separator Grid.Column="1" Style="{StaticResource VerticalSeparatorStyle}" Margin="{StaticResource VerticalSeparatorCenteredMarginThickness}"/>

                                        <!-- Quick symbols -->
                                        <WrapPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                                            <Button Content="-" Click="AddSymbolButton_Click" Tag="-" ToolTip="{extensions:Localize ToolTip_Dash}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="_" Click="AddSymbolButton_Click" Tag="_" ToolTip="{extensions:Localize ToolTip_Underscore}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="." Click="AddSymbolButton_Click" Tag="." ToolTip="{extensions:Localize ToolTip_Dot}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="␣" Click="AddSymbolButton_Click" Tag=" " ToolTip="{extensions:Localize ToolTip_Space}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="(" Click="AddSymbolButton_Click" Tag="(" ToolTip="{extensions:Localize ToolTip_OpenParenthesis}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content=")" Click="AddSymbolButton_Click" Tag=")" ToolTip="{extensions:Localize ToolTip_CloseParenthesis}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="[" Click="AddSymbolButton_Click" Tag="[" ToolTip="{extensions:Localize ToolTip_OpenBracket}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="]" Click="AddSymbolButton_Click" Tag="]" ToolTip="{extensions:Localize ToolTip_CloseBracket}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="+" Click="AddSymbolButton_Click" Tag="+" ToolTip="{extensions:Localize ToolTip_Plus}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="=" Click="AddSymbolButton_Click" Tag="=" ToolTip="{extensions:Localize ToolTip_Equals}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="x" Click="AddSymbolButton_Click" Tag="x" ToolTip="{extensions:Localize ToolTip_Multiply}" Style="{StaticResource SymbolButtonStyle}"/>
                                            <Button Content="#" Click="AddSymbolButton_Click" Tag="#" ToolTip="{extensions:Localize ToolTip_Hash}" Style="{StaticResource SymbolButtonStyle}"/>
                                        </WrapPanel>
                                    </Grid>
                                </StackPanel>
                            </GroupBox>

                            <GridSplitter Grid.Column="3" Width="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{DynamicResource StatusBarBackgroundBrush}" Margin="{StaticResource GridSplitterMarginThickness}"/>

                            <!-- Right column: Template and preview -->
                            <GroupBox Grid.Column="4" Header="{extensions:Localize Header_TemplateAndPreview}" Margin="{StaticResource LeftSmallMarginThickness}">
                                <StackPanel Margin="{StaticResource SectionContentMarginThickness}">
                                    <TextBlock Text="{extensions:Localize Text_FileNameTemplate}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <Border x:Name="FileNameTemplateTokenBox"
                                            Background="{DynamicResource BackgroundPrimaryBrush}"
                                            BorderBrush="{DynamicResource BorderPrimaryBrush}"
                                            BorderThickness="{StaticResource StandardBorderThicknessValue}"
                                            CornerRadius="{StaticResource StandardCornerRadiusValue}"
                                            MinHeight="{StaticResource LargeElementHeight}"
                                            Padding="{StaticResource TinyMarginThickness}">
                                        <WrapPanel x:Name="TokenContainer"
                                                   Orientation="Horizontal"
                                                   VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- Color legend -->
                                    <WrapPanel Orientation="Horizontal" Margin="0,8,0,0" HorizontalAlignment="Left">
                                        <!-- Standard token -->
                                        <StackPanel Orientation="Horizontal" Margin="0,0,12,0">
                                            <Border Style="{StaticResource TokenLegendColorBox}"
                                                    Background="{DynamicResource TokenBackgroundBrush}"
                                                    BorderBrush="{DynamicResource BorderPrimaryBrush}"/>
                                            <TextBlock Style="{StaticResource TokenLegendText}"
                                                       Text="{extensions:Localize Legend_StandardToken}"/>
                                        </StackPanel>

                                        <!-- Custom text token -->
                                        <StackPanel Orientation="Horizontal" Margin="0,0,12,0">
                                            <Border Style="{StaticResource TokenLegendColorBox}"
                                                    Background="{DynamicResource TokenCustomBackgroundBrush}"
                                                    BorderBrush="{DynamicResource TokenCustomBorderBrush}"/>
                                            <TextBlock Style="{StaticResource TokenLegendText}"
                                                       Text="{extensions:Localize Legend_CustomText}"/>
                                        </StackPanel>

                                        <!-- User-defined token -->
                                        <StackPanel Orientation="Horizontal">
                                            <Border Style="{StaticResource TokenLegendColorBox}"
                                                    Background="{DynamicResource TokenUserDefinedBackgroundBrush}"
                                                    BorderBrush="{DynamicResource TokenUserDefinedBorderBrush}"/>
                                            <TextBlock Style="{StaticResource TokenLegendText}"
                                                       Text="{extensions:Localize Legend_UserDefined}"/>
                                        </StackPanel>
                                    </WrapPanel>

                                    <!-- Result preview -->
                                    <TextBlock Text="{extensions:Localize Text_Preview}" Style="{StaticResource SectionHeaderTextStyle}"/>
                                    <Border Style="{StaticResource FileNamePreviewBorderStyle}">
                                        <TextBlock x:Name="FileNamePreviewTextBlock"
                                              ToolTip="{Binding TokenService.FileNamePreview}" Cursor="">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource FileNamePreviewTextStyle}">
                                                    <Setter Property="Text" Value="{Binding TokenService.FileNamePreview}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EnableFileNameConstructor}" Value="False">
                                                            <Setter Property="Text" Value="{extensions:Localize Text_FunctionDisabled}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource TextMutedBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                </StackPanel>
                            </GroupBox>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="{extensions:Localize Header_Settings}">
                    <WrapPanel Orientation="Horizontal" Margin="{StaticResource UniformStandardMarginThickness}">
                        <!-- Language selection group -->
                        <GroupBox Header="{extensions:Localize Header_Language}" Margin="{StaticResource RightStandardMarginThickness}">
                            <StackPanel Orientation="Vertical" Margin="{StaticResource SectionContentMarginThickness}">
                                <ComboBox x:Name="LanguageComboBox"
                                          ItemsSource="{x:Static services:SupportedLanguages.All}"
                                          DisplayMemberPath="DisplayName"
                                          Width="150"
                                          SelectionChanged="LanguageComboBox_SelectionChanged"/>
                            </StackPanel>
                        </GroupBox>

                        <!-- Update settings group -->
                        <GroupBox Header="{extensions:Localize Header_Updates}" Margin="{StaticResource RightStandardMarginThickness}">
                            <StackPanel Orientation="Vertical" Margin="{StaticResource SectionContentMarginThickness}">
                                <CheckBox x:Name="CheckUpdatesOnStartupCheckBox"
                                          Content="{extensions:Localize UI_CheckUpdatesOnStartup}"
                                          IsChecked="{Binding CheckUpdatesOnStartup, Mode=TwoWay}"/>
                            </StackPanel>
                        </GroupBox>
                    </WrapPanel>
                </TabItem>
            </TabControl>
        </Expander>

        <!-- Row 3: Search panel and multiplier -->
        <Grid Grid.Row="3" Margin="{StaticResource OuterBottomMarginThickness}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Search and multiplier controls -->
            <Border Grid.Row="0"
                    Background="{DynamicResource BackgroundPrimaryBrush}"
                    BorderBrush="{DynamicResource BorderPrimaryBrush}"
                    BorderThickness="{StaticResource StandardTopBorderThicknessValue}"
                    CornerRadius="3,3,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Search - left aligned -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left"
                           Margin="{StaticResource StandardMarginThickness}" VerticalAlignment="Center">
                        <Grid>
                            <TextBox x:Name="SearchTextBox"
                                 Width="200"
                                 Style="{StaticResource BaseTextBoxStyle}"
                                 TextChanged="SearchTextBox_TextChanged"/>
                            <TextBlock Text="{extensions:Localize Text_Search}"
                                   Foreground="{DynamicResource TextDisabledBrush}"
                                   Margin="{StaticResource SmallMarginThickness}"
                                   IsHitTestVisible="False" VerticalAlignment="Center" Padding="{StaticResource PlaceholderPaddingThickness}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=SearchTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Border Width="{StaticResource StandardElementHeight}" Height="{StaticResource StandardElementHeight}" Margin="{StaticResource TinyMarginThickness}">
                            <Button x:Name="ClearSearchButton"
                                Click="ClearSearchButton_Click"
                                Style="{StaticResource CloseIconButton}"
                                IsEnabled="False">
                            </Button>
                        </Border>
                    </StackPanel>

                    <!-- Control buttons and multiplier - right aligned -->
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right"
                           Margin="{StaticResource StandardMarginThickness}" VerticalAlignment="Center">

                        <!-- Add property button -->
                            <Button x:Name="AddPresetIPropertyButton" Click="AddPresetIPropertyButton_Click"
                                Margin="{StaticResource RightStandardMarginThickness}"
                                Style="{StaticResource InteractiveActionButtonStyle}">
                            <StackPanel Orientation="Horizontal">
                                <Path Style="{StaticResource AddIconStyle}"
                                      Margin="{StaticResource RightTinyPlusMarginThickness}" SnapsToDevicePixels="True"/>
                                <TextBlock Text="{extensions:Localize UI_Property}"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource TextSecondaryBrush}"/>
                            </StackPanel>
                        </Button>

                        <!-- Export to Excel button -->
                        <Button x:Name="ExportToExcelButton"
                                Click="ExportToExcelButton_Click"
                                IsEnabled="False"
                                Style="{StaticResource InteractiveActionButtonStyle}"
                                Margin="{StaticResource RightStandardMarginThickness}">
                            <Button.Content>
                                <TextBlock Text="{extensions:Localize UI_ExportToExcel}"
                                           TextAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Button.Content>
                        </Button>

                        <!-- Designation analysis button -->
                            <Button Name="ConflictFilesButton"
                                IsEnabled="False"
                                Click="ConflictFilesButton_Click"
                                Style="{StaticResource WarningButtonStyle}"
                                Margin="{StaticResource RightStandardMarginThickness}">
                            <Button.Content>
                                <TextBlock Text="{extensions:Localize UI_Conflicts}"
                                           TextAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Button.Content>
                        </Button>

                        <!-- Multiplier -->
                        <Label Content="{extensions:Localize Label_Multiplier}" Style="{StaticResource BaseLabelStyle}" Margin="{StaticResource RightSmallMarginThickness}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="MultiplierTextBox" Text="1"
                                 PreviewTextInput="MultiplierTextBox_PreviewTextInput"
                                 TextChanged="MultiplierTextBox_TextChanged"
                                 Style="{StaticResource BaseTextBoxStyle}"
                                 Width="30"/>
                            <StackPanel Orientation="Vertical" Margin="{StaticResource TinyMarginThickness}">
                                <Button x:Name="IncrementMultiplierButton"
                                    Content="▲"
                                    ToolTip="{extensions:Localize ToolTip_IncreaseByone}"
                                    Click="IncrementMultiplierButton_Click"
                                    Style="{StaticResource SpinnerButtonStyle}" Margin="0"/>
                                <Button x:Name="DecrementMultiplierButton"
                                    Content="▼"
                                    ToolTip="{extensions:Localize ToolTip_DecreaseByone}"
                                    Click="DecrementMultiplierButton_Click"
                                    Style="{StaticResource SpinnerButtonStyle}" Margin="0"/>
                            </StackPanel>
                        </StackPanel>
                        <Border Width="{StaticResource StandardElementHeight}" Height="{StaticResource StandardElementHeight}" Margin="{StaticResource TinyMarginThickness}">
                            <Button x:Name="ClearMultiplierButton"
                                Click="ClearMultiplierButton_Click"
                                Style="{StaticResource CloseIconButton}"
                                ToolTip="{extensions:Localize ToolTip_ResetMultiplier}"
                                IsEnabled="False">
                            </Button>
                        </Border>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Data table -->
            <Grid Grid.Row="1">
                <DataGrid x:Name="PartsDataGrid"
                      AutoGenerateColumns="False"
                      IsReadOnly="False"
                      CanUserAddRows="False"
                      MinRowHeight="{StaticResource LargeElementHeight}"
                      GridLinesVisibility="None"
                      Background="{DynamicResource BackgroundPrimaryBrush}"
                      VerticalAlignment="Top"
                      BorderBrush="{DynamicResource BorderPrimaryBrush}"
                      BorderThickness="{StaticResource StandardBorderThicknessValue}"
                      HorizontalGridLinesBrush="{DynamicResource GridLinesBrush}"
                      VerticalGridLinesBrush="{DynamicResource GridLinesBrush}"
                      SelectionMode="Extended"
                      ClipboardCopyMode="IncludeHeader"
                      AlternationCount="2"
                      EnableRowVirtualization="False"
                      SelectionChanged="PartsDataGrid_SelectionChanged"
                      RowHeaderWidth="0"
                      ContextMenuOpening="PartsDataGrid_ContextMenuOpening"
                      RowStyle="{StaticResource DataGridRowStyle}"
                      ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                      RowHeaderStyle="{StaticResource DataGridRowHeaderStyle}"
                      CellStyle="{StaticResource DataGridCellStyle}"
                      PreviewKeyDown="PartsDataGrid_PreviewKeyDown">

                    <!-- Context menu -->
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{extensions:Localize MenuItem_ExportSelectedDXF}" Click="ExportSelectedDXF_Click" x:Name="ExportSelectedDXFMenuItem"/>
                            <Separator/>
                            <MenuItem Header="{extensions:Localize ContextMenu_OpenFileLocation}" Click="OpenFileLocation_Click" x:Name="OpenFileLocationMenuItem"/>
                            <MenuItem Header="{extensions:Localize ContextMenu_OpenSelectedModels}" Click="OpenSelectedModels_Click" x:Name="OpenSelectedModelsMenuItem"/>
                            <Separator/>
                            <MenuItem Header="{extensions:Localize ContextMenu_ResetQuantity}" Click="ResetQuantity_Click" x:Name="ResetQuantityMenuItem"/>
                            <Separator/>
                            <MenuItem Header="{extensions:Localize ContextMenu_RemoveSelectedRows}" Click="RemoveSelectedRows_Click" x:Name="RemoveSelectedRowsMenuItem"/>
                            <MenuItem Header="{extensions:Localize ContextMenu_ClearList}" Click="ClearList_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Overlay for no columns case -->
                <Border x:Name="NoColumnsOverlay"
                    Background="{DynamicResource BackgroundPrimaryBrush}"
                    BorderBrush="{DynamicResource BorderPrimaryBrush}"
                    BorderThickness="{StaticResource StandardBorderThicknessValue}"
                    CornerRadius="{StaticResource StandardCornerRadiusValue}"
                    Visibility="Collapsed">
                    <StackPanel VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                        <Path Style="{StaticResource TableIconStyle}"
                          Width="48"
                          Height="48"
                          HorizontalAlignment="Center"
                          Margin="{StaticResource BottomLargeMarginThickness}"
                          Opacity="0.4"/>
                        <TextBlock Text="{extensions:Localize UI_NoColumnsSelected}"
                               Style="{StaticResource OverlayTitleTextStyle}"/>
                        <TextBlock Text="{extensions:Localize UI_AddColumnsInstruction}"
                               Style="{StaticResource OverlayHintTextStyle}"
                               Margin="{StaticResource BottomXLargeMarginThickness}"/>
                        <Button Click="AddPresetIPropertyButton_Click"
                            Style="{StaticResource OverlayButtonStyle}">
                            <StackPanel Orientation="Horizontal">
                                <Path Style="{StaticResource AddIconStyle}"
                                  Width="{StaticResource MediumIconSize}"
                                  Height="{StaticResource MediumIconSize}"
                                  Margin="{StaticResource RightSmallPlusMarginThickness}"/>
                                <TextBlock Text="{extensions:Localize UI_AddColumns}"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource TextSecondaryBrush}"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>

        <!-- Row 4: StatusBar -->
        <StatusBar Grid.Row="4" Style="{StaticResource BaseStatusBarStyle}">
            <StatusBarItem Style="{StaticResource BaseStatusBarItemStyle}">
                <TextBlock>
                    <Run Text="{extensions:Localize Text_Status}" FontWeight="Bold"/>
                    <Run x:Name="ProgressLabelRun" Text=""/>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" x:Name="ProjectStackPanelItem" Style="{StaticResource BaseStatusBarItemStyle}" ToolTip="{extensions:Localize ToolTip_ProjectPath}">
                <TextBlock>
                    <Run Text="{extensions:Localize Text_Project}" FontWeight="Bold"/>
                    <Run x:Name="ProjectNameRun" Text=""/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
    </Grid>
    </Border>
</Window>
