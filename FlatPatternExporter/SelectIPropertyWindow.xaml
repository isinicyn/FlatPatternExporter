<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:local="clr-namespace:FlatPatternExporter"
    mc:Ignorable="av" x:Class="FlatPatternExporter.SelectIPropertyWindow"
    Title="Выбор свойства"
    ResizeMode="CanResize" 
    WindowStartupLocation="CenterScreen" MinWidth="270" MaxWidth="270" VerticalAlignment="Top" MinHeight="500" Height="500">
    <Window.Resources>
        <!-- CollectionViewSource для группировки по категориям -->
        <CollectionViewSource x:Key="GroupedProperties"
                              Source="{Binding AvailableProperties}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <!-- Сначала сортируем по категории, затем по DisplayName -->
                <scm:SortDescription PropertyName="Category" Direction="Ascending" />
                <scm:SortDescription PropertyName="ListDisplayName" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <Grid>
        <!-- Основное содержимое -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ListBox x:Name="IPropertyListBox" 
                     Grid.Row="0"
                     ItemsSource="{Binding Source={StaticResource GroupedProperties}}" 
                     SelectionMode="Single" 
                     MouseDoubleClick="iPropertyListBox_MouseDoubleClick"
                     Background="{DynamicResource TransparentBrush}"
                     BorderThickness="{StaticResource StandardBorderThicknessValue}" av:ItemsSource="{av:SampleData ItemCount=5}"
                     ItemContainerStyle="{StaticResource CustomListBoxItemStyle}" Margin="{StaticResource SmallMarginThickness}">


                <!-- Стиль для группировки -->
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                            </Style>
                        </GroupStyle.ContainerStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Border Background="{StaticResource BorderLightBrush}" 
                                        BorderBrush="{StaticResource BorderDarkBrush}" 
                                        BorderThickness="{StaticResource StandardBorderThicknessValue}"
                                        Margin="{StaticResource GroupHeaderBorderMarginThickness}"
                                        Padding="{StaticResource SmallRectPaddingThickness}">
                                    <TextBlock Text="{Binding Name}" 
                                               Style="{StaticResource BaseTextBlockStyle}"
                                               FontWeight="Bold" 
                                               FontSize="{StaticResource StandardFontSize}" 
                                               Foreground="{StaticResource TextTertiaryBrush}"/>
                                </Border>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListBox.GroupStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="ItemBorder"
                                        Background="{StaticResource SelectionBackgroundBrush}" 
                                        BorderBrush="{StaticResource BorderTertiaryBrush}" 
                                        BorderThickness="{StaticResource StandardBorderThicknessValue}"
                                        Padding="{StaticResource HorizontalSmallPaddingThickness}"
                                        Margin="{StaticResource TinyMarginThickness}"
                                        SnapsToDevicePixels="True" 
                                         Height="{StaticResource LargeElementHeight}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="{Binding ListDisplayName}" 
                                           Style="{StaticResource SectionHeaderTextStyle}"
                                           HorizontalAlignment="Left" 
                                           VerticalAlignment="Center"
                                           TextTrimming="CharacterEllipsis"
                                           ToolTip="{Binding ListDisplayName}"
                                           Margin="{StaticResource HorizontalTinyVerticalHairlineMarginThickness}"/>

                                <Button Grid.Column="1"
                                        x:Name="RemovePropertyButton"
                                        ToolTip="Удалить колонку"
                                        Margin="{StaticResource HorizontalTinyMarginThickness}"
                                        Click="RemovePropertyButton_Click"
                                        Tag="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ResetButtonStyle}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsAdded}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <!-- Триггер для наведения мыши -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                                <Setter TargetName="ItemBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Поле для добавления custom property -->
            <Border Grid.Row="1" Background="{StaticResource BackgroundQuaternaryBrush}" BorderThickness="{StaticResource StandardBorderThicknessValue}" Margin="{StaticResource SmallMarginThickness}">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                </Border.BorderBrush>
                <Grid Margin="{StaticResource SmallMarginThickness}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Заголовок раздела -->
                    <TextBlock Grid.Row="0"
                               Text="Пользовательское свойство"
                               Style="{StaticResource BaseTextBlockStyle}"
                               FontWeight="Bold"
                               Foreground="{StaticResource TextTertiaryBrush}"
                               Margin="{StaticResource LeftTinyBottomSmallMarginThickness}"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="UserDefinedPropertyTextBox" 
                             Grid.Column="0"
                             Style="{StaticResource BaseTextBoxStyle}"
                             BorderBrush="{StaticResource BorderTertiaryBrush}"
                             TextChanged="UserDefinedPropertyTextBox_TextChanged"/>

                        <Button x:Name="AddUserDefinedPropertyButton"
                            Grid.Column="1"
                            Width="{StaticResource StandardElementHeight}"
                            Style="{StaticResource BaseButtonStyle}"
                            IsEnabled="False"
                            Click="AddUserDefinedPropertyButton_Click">
                            <Path Style="{StaticResource AddIconStyle}" 
                              Width="12" Height="12"/>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
