<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- SVG иконка добавления - простой плюс -->
    <Geometry x:Key="AddIconGeometry">M12,2 L12,22 M2,12 L22,12</Geometry>

    <!-- Централизованный стиль для иконки добавления -->
    <Style x:Key="AddIconStyle" TargetType="Path">
        <Setter Property="Data" Value="{StaticResource AddIconGeometry}"/>
        <Setter Property="Stroke" Value="#333333"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Стили для блока информации о документе -->
    <Style x:Key="DocumentInfoLabelStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,3,1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DocumentInfoValueStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ModelStateValueStyle" TargetType="TextBlock" BasedOn="{StaticResource DocumentInfoValueStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPrimaryModelState}" Value="False">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Базовый стиль для кнопки с прогресс-баром -->
    <Style x:Key="BaseProgressButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <Grid>
                                <!-- Прогресс-бар как фон -->
                                <ProgressBar x:Name="PART_ProgressBar" 
                                       Background="Transparent"
                                       Foreground="#FFE1E1E1"
                                       BorderThickness="0"
                                       Minimum="0" 
                                       Maximum="100" 
                                       Value="{TemplateBinding Tag}"/>

                                <!-- Контент кнопки поверх прогресса -->
                                <ContentPresenter x:Name="ContentPresenter"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Content}"
                                            TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFF0F0F0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFE0E0E0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#FFF0F0F0"/>
                            <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="#FF888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <!-- Стиль для токенов в виде блоков -->
    <Style x:Key="TokenItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="TokenBorder"
                            Background="#F8F8F8"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            Padding="6,3"
                            Margin="2"
                            Cursor="Hand">
                        <TextBlock Text="{Binding}"
                                   FontSize="11"
                                   Foreground="Black"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TokenBorder" Property="Background" Value="#F0F0F0"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TokenBorder" Property="Background" Value="#E0E0E0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ListBox с токенами -->
    <Style x:Key="TokenListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource TokenItemStyle}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для кнопки-предупреждения -->
    <Style x:Key="WarningButtonStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="BorderBrush" Value="#FFFF2929"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для кнопки очистки поля ввода -->
    <Style x:Key="ClearInputButtonStyle" TargetType="Button">
        <Setter Property="Content" Value="✖"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <!-- Стиль для кнопки на оверлее -->
    <Style x:Key="OverlayButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="#F2F2F2"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#D0D0D0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E8E8E8"/>
                            <Setter Property="BorderBrush" Value="#C0C0C0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D8D8D8"/>
                            <Setter Property="BorderBrush" Value="#B0B0B0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для вертикального разделителя -->
    <Style x:Key="VerticalSeparatorStyle" TargetType="Separator">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Fill="#FF969595" Width="1" Height="185"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,5,0,20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
</ResourceDictionary>