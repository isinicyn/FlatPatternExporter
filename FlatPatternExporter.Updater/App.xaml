<Application x:Class="FlatPatternExporter.Updater.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/DarkTheme.xaml"/>
                <ResourceDictionary Source="Styles/DesignTokens.xaml"/>
                <ResourceDictionary Source="Styles/IconResources.xaml"/>
                <ResourceDictionary Source="Styles/BaseControlStyles.xaml"/>
                <ResourceDictionary Source="Styles/ThemeControlStyles.xaml"/>
                <ResourceDictionary Source="Styles/ScrollBarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Window">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="{StaticResource StandardFontSize}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundPrimaryBrush}"/>
            </Style>

            <!-- WindowChrome configuration -->
            <shell:WindowChrome x:Key="CustomWindowChrome"
                                CaptionHeight="0"
                                ResizeBorderThickness="7"
                                UseAeroCaptionButtons="False"/>

            <Style x:Key="WindowRootBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource BackgroundPrimaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderPrimaryBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="{StaticResource StandardCornerRadiusValue}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                        <Setter Property="Margin" Value="7"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="CornerRadius" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
            </Style>

            <Style TargetType="GroupBox" BasedOn="{StaticResource BaseGroupBoxStyle}"/>

            <!-- Dialog bottom bar style -->
            <Style x:Key="DialogBottomBarStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource BackgroundTertiaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderSecondaryBrush}"/>
                <Setter Property="BorderThickness" Value="{StaticResource StandardTopOnlyBorderThicknessValue}"/>
                <Setter Property="Padding" Value="{StaticResource StandardPaddingThickness}"/>
            </Style>

            <!-- Base template for buttons -->
            <ControlTemplate x:Key="BaseInteractiveButtonTemplate" TargetType="Button">
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource StandardCornerRadiusValue}"
                        Padding="{TemplateBinding Padding}">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Content}"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                      TextBlock.FontSize="{TemplateBinding FontSize}"/>
                </Border>
            </ControlTemplate>

            <!-- Base button style -->
            <Style x:Key="BaseActionButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="{StaticResource StandardElementHeight}"/>
                <Setter Property="FontSize" Value="{StaticResource StandardFontSize}"/>
                <Setter Property="Padding" Value="{StaticResource ControlPaddingThickness}"/>
                <Setter Property="Margin" Value="{StaticResource TinyMarginThickness}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundPrimaryBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderPrimaryBrush}"/>
                <Setter Property="BorderThickness" Value="{StaticResource StandardBorderThicknessValue}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!-- Interactive button style -->
            <Style x:Key="InteractiveActionButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseActionButtonStyle}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template" Value="{StaticResource BaseInteractiveButtonTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderTertiaryBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectionBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderDarkBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource SelectionBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}"/>
                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                        <Setter Property="Cursor" Value="Arrow"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Action button with left margin -->
            <Style x:Key="LeftMarginActionButtonStyle" TargetType="Button" BasedOn="{StaticResource InteractiveActionButtonStyle}">
                <Setter Property="MinWidth" Value="{StaticResource StandardButtonMinWidth}"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
            </Style>

            <!-- File name action button (alias) -->
            <Style x:Key="FileNameActionButtonStyle" TargetType="Button" BasedOn="{StaticResource LeftMarginActionButtonStyle}"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>
